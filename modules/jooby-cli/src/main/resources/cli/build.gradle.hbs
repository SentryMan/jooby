buildscript {
  ext {
    {{#if kotlin}}kotlinVersion = "{{kotlinVersion}}"{{/if}}
    joobyVersion = "{{joobyVersion}}"
  }
}

plugins {
  id "application"
{{#if kotlin}}
  id "org.jetbrains.kotlin.jvm" version "${kotlinVersion}"
{{/if}}
{{#if kapt}}
  id "org.jetbrains.kotlin.kapt" version "${kotlinVersion}"
{{/if}}
{{#if openapi}}
  id "io.jooby.openAPI" version "${joobyVersion}"
{{/if}}
  id "io.jooby.run" version "${joobyVersion}"
  id "io.spring.dependency-management" version "1.1.0"
  id "com.google.osdetector" version "1.7.3"
  id "com.github.johnrengelman.shadow" version "8.1.1"
}

group "{{groupId}}"
version "{{version}}"
mainClassName = "{{package}}.App{{#if kotlin}}Kt{{/if}}"
sourceCompatibility = 17

repositories {
  mavenLocal()
  mavenCentral()
}

dependencyManagement {
  imports {
    mavenBom "io.jooby:jooby-bom:$joobyVersion"
  }
}

dependencies {
{{#if kapt}}
  kapt "io.jooby:jooby-apt"
{{else if apt}}
  annotationProcessor "io.jooby:jooby-apt"
{{/if}}
{{#each dependencies}}
  implementation "{{this}}"
{{/each}}

{{#each testDependencies}}
  testImplementation "{{this}}"
{{/each}}
}

test {
  useJUnitPlatform()
}

{{#if kotlin}}
/** Kotlin debug information: */
tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
  kotlinOptions.javaParameters = true
}
{{else}}
/** Java debug information: */
tasks.withType(JavaCompile) {
  options.compilerArgs += [
    '-parameters',
{{#if apt}}
    '-Ajooby.incremental=true',
    '-Ajooby.services=true',
    '-Ajooby.debug=false'
{{/if}}
  ]
  options.debug = true
}
{{/if}}

{{#if kapt}}
kapt {
  arguments {
    arg('jooby.incremental', true)
    arg('jooby.services', true)
    arg('jooby.debug', false)
  }
}
{{/if}}

shadowJar {
  mergeServiceFiles()
}

{{#openapi}}
joobyRun.dependsOn openAPI

jar.dependsOn openAPI
{{/openapi}}
